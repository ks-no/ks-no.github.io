interface Rolle {
    id: ID!
    navn: String!
    beskrivelse: String!
    tjenesteomraade: Tjenesteomraade!
    registre: Registre!
    organisasjon: Organisasjon!
    tjenester: [String!]
}

"""
Beskriver en rolle man har tilgang til å bruke
"""
type LagretRolle implements Rolle {
    id: ID!
    navn: String!
    beskrivelse: String!
    tjenesteomraade: Tjenesteomraade!
    registre: Registre!
    organisasjon: Organisasjon!
    tjenester: [String!]
}

"""
Beskriver en rolle man har tilgang til å gjøre endringer på
"""
type KonfigurerbarRolle implements Rolle {
    id: ID!
    navn: String!
    beskrivelse: String!
    tjenesteomraade: Tjenesteomraade!
    registre: Registre!
    organisasjon: Organisasjon!
    ressursId: ID!
    # Viser oppsummering av ilganger som er gitt til rollen
    tilganger: RolleTilganger,
    # Brukes for å liste opp alle aktører som har tilgang til rollen
    aktorer: Aktorer,
    tjenester: [String!]
}

"""
Viser hvilke tilganger som har vært gitt en rolle
"""
type RolleTilganger {
    # antall tilganger gitt per fødselsnummer
    antallPersoner: Int!
    # antall integrasjoner som har brukstilgang
    antallIntegrasjoner: Int!
    # antall eksterne grupper som har tilgang (når sentralisert brukerstyring er aktivert)
    antallEksterneGrupper: Int!
    # antall eksterne brukere som har tilgang (når sentralisert brukerstyring er aktivert)
    antallEksterneBrukere: Int!
}

type Aktorer {
    # integrasjoner som har fått tilgang til å bruke rollen
    integrasjonTilganger: [IntegrasjonAktor!]
    # tilganger som er gitt til å bruke rollen via nettsidene
    nettsideTilganger: [NettsideAktor!]
    # Konfigurasjonstilgang gitt eksplisitt på rollen (inkluderer ikke arvede privilegier)
    adminTilganger: [NettsideAktor!]
}

"""
Aktør er et en som har tilgang
"""
interface Aktor {
    id: String!
    navn: String
}

"""
Integrasjon (systembruker)
"""
type IntegrasjonAktor implements Aktor {
    id: String!
    navn: String
}

"""
Person identifisert med fødselsnummer. Brukes når sentralisert brukerstyring ikke er aktivert
"""
type PersonAktor implements Aktor {
    id: String!
    navn: String
}

"""
Gruppe av brukere definert i eksternt tilgangsstyringssystem. Tilgjengelig bare når sentralisert brukerstyring er aktivert
"""
type EksternGruppe implements Aktor {
    id: String!
    navn: String
}

"""
Bruker definert i ekstern tilgangsstyringssystem. Tilgjengelig bare når sentralisert brukerstyring er aktivert
"""
type EksternBruker implements Aktor {
    id: String!
    navn: String
}

union NettsideAktor = PersonAktor | EksternBruker | EksternGruppe

"""
Brukes til oppretting av ny rolle
"""
input RolleDefinisjon {
    # fiksOrgId til organisasjon som rollen skal tilhøre
    organisasjonId: ID!
    # rollens navn
    navn: String!
    # beskrivelse av rollen
    beskrivelse: String!
    # tjenesteområde som skal gjelde for rollen
    tjenesteomraade: TjenesteomraadeKode!
    # beskrivelse av registre som rollen skal ha tilgang til
    registre: RegistreDefinisjon!
    # Tilganger som skal gies ved opprettelse av roller
    tilganger: Tilganger
}

input Tilganger {
    # Integrasjoner som skal ha tilgang til rollen
    integrasjoner: [ID!]
    # Brukere som skal ha tilgang til rollen via nettsidene
    nettsideBrukere: [String!]
}

type Organisasjon {
    # Tilsvarer fiksOrgId
    id: ID!
    # Navn på organisasjonen
    navn: String!
    # Kommunenummer til organisasjonen
    kommunenr: String
}

"""
Nøkkel som brukes til å finne en spesifikk rolle ved oppdatering
"""
input RolleNokkel {
    id: ID!
    organisasjonId: ID!
}

"""
Brukes til endringer på rolle
"""
input OppdaterRolle {
    nokkel: RolleNokkel!
    oppdateringer: OppdateringerRolle!
}

"""
Endringer i tilganger for rolle
"""
input OppdaterTilganger {

    fjernNettsideBrukere: [String!]
    leggTilNettsideBrukere: [String!]
    leggTilAdministratorer: [String!]
    fjernAdministratorer: [String!]
    leggTilIntegrasjoner: [ID!]
    fjernIntegrasjoner: [ID!]
}

input OppdateringerRolle {
    navn: String
    beskrivelse: String
    kontaktregister: KontaktRegisterEndring
    folkeregister: OppdaterFolkeregister
    summertskattegrunnlag: SummertSkattegrunnlagEndring
    tilganger: OppdaterTilganger
}

"""
Endring av rettighetpakke for summert skattegrunnlag
"""
input SummertSkattegrunnlagEndring {
    rettighetspakke: SummertSkattegrunnlagRettighetspakke!
}

"""
Brukes for å illustrere hvilke registre rollen har aktivert og samt registerspesifikke avgrensninger
"""
type Registre {
    kontaktregister: Kontaktregister
    folkeregister: Folkeregister
    summertSkattegrunnlag: SummertSkattegrunnlag
}


"""
Input type som brukes ved opprettelse av rolle til å definere innstillinger for ulike registre
"""
input RegistreDefinisjon {
    # brukes dersom rollen skal ha tilgang til kontaktregisteret
    kontaktregister: KontaktRegisterEndring
    # brukes dersom rollen skal ha tilgang til folkeregisteret
    folkeregister: FolkeregisterOpprett
    # brukes dersom rollen skal ha tilgang til summert skattegrunlag
    summertskattegrunnlag: SummertSkattegrunnlagDefinisjon
}

"""
Input type som brukes ved opprettelse av rolle til å definere innstillinger for ulike registre
"""
input SummertSkattegrunnlagDefinisjon {
    rettighetspakke: SummertSkattegrunnlagRettighetspakke!
}

input FolkeregisterOpprett {
    # hvilke bruksområder skal rollen ha
    bruksomraader: [FolkeregisterBruksomraadeKode!]!
    # dersom oppgitt begrenser man felt som returneres fra rollen
    minimering: DataminimeringEndring
    # Skal rollen brukes i søkesiden på fiks-forvaltning?
    kanBrukesPaSokeside: Boolean! = false
}

"""
Brukes for å oppdatere felt på for folkeregister. Nullverdi betyr ingen endring
"""
input OppdaterFolkeregister {

    # hvilke bruksområder skal rollen ha. Minst en må være oppgitt. Ved oppdatering må det oppgies fullstendig sett
    bruksomraader: [FolkeregisterBruksomraadeKode!]

    # dersom oppgitt begrenser man felt som returneres fra rollen. Erstatter gjeldende minimering. Om man oppgir et tomt objekt nullstilles minimering
    minimering: DataminimeringEndring

    # Skal rollen brukes i søkesiden på fiks-forvaltning?
    kanBrukesPaSokeside: Boolean
}

type Folkeregister {
    bruksomraader: [FolkeregisterBruksomraade!]!
    minimering: Dataminimering
    kanBrukesPaSokeside: Boolean!
}

"""
Beskriver et tjenesteområde knyttet til folkeregisteret
"""
type Tjenesteomraade {
    kode: TjenesteomraadeKode!
    navn: String!
    # Bestemmer om rollen bruker enten Skatteetatens rettighetspakke "Offentlig og privat virksomhet med hjemmel" eller "Offentlig virksomhet uten hjemmel"
    kanHenteTaushetsbelagtInformasjon: Boolean!
    gyldig: Boolean!
    # Hvilker lovhjemler er aktuelle
    lovhjemler: [FolkeregisterLovhjemmel!]
    # Hvilke regler gjelder for dette tjenesteområde
    regler: TjenesteomraadeRegler
}

interface RegisterRegler {
    tilgjengelig: Boolean!
}

type FolkeregisterRegler implements RegisterRegler{
    tilgjengelig: Boolean!
}
type SummertSkattegrunnlagRegler implements RegisterRegler {
    tilgjengelig: Boolean!
    rettighetspakker: [SummertSkattegrunnlagRettighetspakke!]!
}
type KontaktregisterRegler implements RegisterRegler {
    tilgjengelig: Boolean!
}

type TjenesteomraadeRegler {
    folkeregister: FolkeregisterRegler!
    summertSkattegrunnlag: SummertSkattegrunnlagRegler!
    kontaktregister: KontaktregisterRegler!
}

"""
Relevant lovhjemmel for tilgang til folkeregisteret
"""
type FolkeregisterLovhjemmel {
    beskrivelse: String!
    lovdataLenker: [String!]
}

enum TjenesteomraadeKode{
    BARNEVERN
    HELSE
    GRAVFERDSMYNDIGHET
    OMSORG
    OPPVEKST
    BARNEHAGE
    SKATTEOPPKREVER
    SOSIAL
    TEKNISK
    STOTTE
    INNBYGGERTJENESTER
    NAERINGSLIV
    VALG
    INNFORDRING_INNKREVING
    INNVANDRING_OG_INTEGRERING
    SAMFUNNSSIKKERHET
    DEMOKRATI_AAPENHET
    TRAFIKK_TRANSPORT
    FORELDREBETALING_SFO_BARNEHAGE
    HELSE_PRAKTISK_BISTAND
    HELSE_LANGTIDSOPPHOLD_INSTITUSJON
}

enum FolkeregisterBruksomraadeKode {
    INNBYGGERLISTE
    SOEK
    HENDELSER
}

type FolkeregisterBruksomraade {
    kode: FolkeregisterBruksomraadeKode!
    navn: String!
    beskrivelse: String!
}

type SummertSkattegrunnlag {
    rettighetspakke: SummertSkattegrunnlagRettighetspakke!
    navn: String!
    beskrivelse: String!
}

enum SummertSkattegrunnlagRettighetspakke {
    KOMMUNEFORELDREBETALING
    KOMMUNEBOLIGSOSIALEFORMAAL
    KOMMUNEPERSONLIGASSISTANSE
    KOMMUNELANGTIDSOPPHOLDINSTITUSJON
}
type Kontaktregister {
    tilgjengelig: Boolean!
}

input KontaktRegisterEndring {
    tilgjengelig: Boolean
}

type Dataminimering {
    felt: [String]
}

type FolkeregisterBruksomraaderListe {
    verdier: [FolkeregisterBruksomraade!]!
}

type TjenesteomraaderListe {
    verdier: [Tjenesteomraade!]!
}

interface FolkeregisterMinimeringFelt {
    felt: String!
    navn: String!
    taushetsbelagt: Boolean!
}

type FolkeregisterOverordnetMinimeringFelt implements FolkeregisterMinimeringFelt{
    felt: String!
    navn: String!
    taushetsbelagt: Boolean!
}

type FolkeregisterUnderordnetMinimeringFelt implements FolkeregisterMinimeringFelt{
    felt: String!
    navn: String!
    beskrivelse: String!
    taushetsbelagt: Boolean!
}

type FolkeregisterMinimering {
    # Navn på part (type person-basis)
    overordnetFelt: FolkeregisterOverordnetMinimeringFelt!
    # Tilsvarer opplysinger i folkeregister konfigurasjon
    underliggendeFelt: [FolkeregisterUnderordnetMinimeringFelt!]
}

type FolkeregisterMinimeringListe {
    lovligeFelt: [FolkeregisterMinimering!]!
}

type FolkeregisterGyldigeVerdier {
    bruksomraader: FolkeregisterBruksomraaderListe
    minimeringsFelt: FolkeregisterMinimeringListe
}

type SummertSkattegrunnlagRettighetspakkeVerdi {
    pakke: SummertSkattegrunnlagRettighetspakke!
    navn: String!
    beskrivelse: String!
    tilgjengelig: Boolean!
}

type SummertSkattegrunnlagRettighetspakkeVerdiListe {
    verdier: [SummertSkattegrunnlagRettighetspakkeVerdi!]
}

type SummertSkattegrunnlagGyldigeVerdier {
    rettighetspakker: SummertSkattegrunnlagRettighetspakkeVerdiListe
}

"""Beskriver gyldige verdier som brukes ved validering av rolle"""
type GyldigeVerdier {
    """lovlige verdier for tjenesteområde"""
    tjenesteomraader(inkluderUgyldige: Boolean! = false): TjenesteomraaderListe!
    """lovlige verdier som gjelder bare for folkeregister"""
    folkeregisterVerdier: FolkeregisterGyldigeVerdier!
    """lovlige verdier som gjelder bare for summert skattegrunnlag"""
    summertSkattegrunnlagVerdier: SummertSkattegrunnlagGyldigeVerdier!
}

input DataminimeringEndring {
    """brukes for å begrense hvilke felt som skal returneres for oppslag folkeregisteret"""
    felt: [String!]
}

"""
Brukes for opprettelse av register tjenesten
"""
input OpprettRegisterTjeneste {
    """fiksOrgId for organisasjonen som det skal opprettes en konfigurasjon for"""
    organisasjonId: ID!
    """må oppgi minst en epost"""
    kontakteposter: [String!]!
    """gjør det mulig å legge til administratorer for tjenesten ved opprettelse"""
    administratorer: [String!]
}

"""
Brukes for å oppdatere tjenestekonfigurasjon (kontakteposter)
"""
input OppdaterRegisterTjeneste {
    """fiksOrgId for organisasjonen som det skal oppdateres konfigurasjon for"""
    organisasjonId: ID!
    """må oppgi minst en epost. Erstatter gjeldende verdi"""
    kontakteposter: [String!]
    """Brukes for å gi eller fjerne administrasjonstilganger"""
    endreTilganger: EndreAdministratorTilganger
}

input EndreAdministratorTilganger {
    leggTil: [String!]
    fjerne: [String!]
}

"""
Brukes for representere gjeldende konfigurasjon
"""
type RegisterTjenesteDefinisjon {
    organisasjonId: ID!

    # vil alltid ha minst en epost
    kontakteposter: [String!]!

    # ressursId for tjenesten
    ressursId: ID

    # hvem som har administrasjonstilgang
    administratorer: [NettsideAktor!]
}

input RolleFilter {
    tjenesteomraade: TjenesteomraadeKode,
    navn: String
}

type Mutation {
    opprettRolle(input: RolleDefinisjon!): KonfigurerbarRolle!
    oppdaterRolle(input: OppdaterRolle!): KonfigurerbarRolle!
    slettRolle(rolleId: ID!): LagretRolle!
    opprettKonfigurasjon(definisjon: OpprettRegisterTjeneste!): RegisterTjenesteDefinisjon
    oppdaterKonfigurasjon(definisjon: OppdaterRegisterTjeneste!): RegisterTjenesteDefinisjon
}

type Query {
    finnKonfigurerbareRoller(organisasjonId: ID!, filter: RolleFilter): [KonfigurerbarRolle!]!
    finnKonfigurerbarRolleMedId(organisasjonId: ID!, rolleId: ID!): KonfigurerbarRolle
    finnTilgjengeligeRoller: [LagretRolle!]!
    finnTilgjengeligRolleMedId(organisasjonId: ID!, rolleId: ID!): LagretRolle
    alleHjelpeVerdier: GyldigeVerdier!
    tjenesteKonfigurasjon(organisasjonId: ID!): RegisterTjenesteDefinisjon
}


